{"version":3,"sources":["src/pages/SecurityUpdate/Table/ActionButton.js","src/pages/SecurityUpdate/Table/Column.js","src/pages/SecurityUpdate/index.js"],"names":["Container","styled","div","actionButton","data","modalState","modalStateHandler","modalState2","modalStateHandler2","buttonLoading","buttonLoadingHandler","alertState","onClick","Alert","visible","setModal","actionDescription","promoCode","actionButtonText","Modal","onRequestClose","getColumns","setRowsData","id","field","label","searchable","editable","sortable","resizable","cellRenderer","RowCell","width","pinned","ActionButton","RecentDocument","useState","fetchedData","state","setState","stateHandler","key","value","useEffect","a","async","SojiBaseInit","SojiBase","get","on","response","className","DataTable","MOCK_DATA","texts","PagePreloader"],"mappings":"kSAQMA,EAAYC,IAAOC,IAAV,oKAyCAC,EAhCM,SAAC,GASf,IARHC,EAQE,EARFA,KACAC,EAOE,EAPFA,WACAC,EAME,EANFA,kBACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,mBAEAC,GAEE,EAHFC,qBAGE,EAFFD,eAEE,EADFE,WAIA,OACI,qCACI,eAACX,EAAD,WACI,cAAC,IAAD,CAAcY,QAAS,kBAAMN,GAAkB,MAC/C,cAAC,IAAD,CAAYM,QAAS,kBAAMJ,GAAmB,SAElD,cAACK,EAAA,EAAD,CACIC,QAAST,EACTU,SAAU,kBAAMT,GAAkB,IAClCU,kBAAiB,+CAAiDZ,EAAKa,UAAtD,KAEjBR,cAAeA,EACfS,iBAAiB,iBAErB,cAACC,EAAA,EAAD,CAAOL,QAASP,EAAaa,eAAgB,kBAAMZ,GAAmB,UCmBnEa,EA3DI,SAAC,GAAoB,EAAlBC,YAClB,MAAO,CACH,CACIC,GAAI,IACJC,MAAO,eACPC,MAAO,MACPX,SAAS,EACTY,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,aAAcC,IACdC,MAAO,QAEX,CACIT,GAAI,IACJC,MAAO,WACPC,MAAO,iBACPX,SAAS,EACTY,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,aAAcC,KAElB,CACIR,GAAI,IACJC,MAAO,YACPC,MAAO,YACPX,SAAS,EACTY,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,aAAcC,KAElB,CACIR,GAAI,IACJC,MAAO,sBACPC,MAAO,uBACPX,SAAS,EACTY,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,aAAcC,KAEnB,CACKR,GAAI,UACJS,MAAO,cACPlB,SAAS,EACTmB,QAAQ,EACRL,UAAU,EACVC,WAAW,EACXC,aAAcI,K,8NClDX,SAASC,IACpB,MAA0BC,mBAAS,CAC/BC,aAAa,IADjB,WAAOC,EAAP,KAAcC,EAAd,KAIMC,EAAe,SAACC,EAAKC,GACvBJ,EAAMG,GAAOC,EACbH,E,iWAAS,CAAD,GAAMD,KAclB,OAXAK,qBAAU,YACN,WAAC,QAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC0BE,KAD1B,cACSC,EADT,kBAAAH,EAAA,MAEwBG,EAASC,IAAI,gDAFrC,cAGUC,GAAG,UAAU,SAAOC,GAAP,eAAAN,EAAAC,OAAA,gDACVzC,EAAO8C,EAASA,SAAS9C,KAC/BoC,EAAa,cAAepC,GAFZ,+DAHvB,4DAAD,KAQD,IAGC,qBAAK+C,UAAU,8BAAf,SACKb,EAAMD,YACH,cAACe,EAAA,EAAD,CAAW/B,WAAYA,EAAYgC,UAAW,GAAIC,MAAM,kBAExD,cAACC,EAAA,EAAD","file":"static/js/16.7775d613.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Alert from '@components/libs/Alert';\r\n// import MevronBaseInit from '@modules/SOJIBase';\r\nimport Modal from '@modules/Modal';\r\nimport { DeleteButton, EditButton } from '@modules/DataTable/Buttons';\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    display: inline-flex;\r\n    padding: 0 20px;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n`;\r\n\r\nconst actionButton = ({\r\n    data,\r\n    modalState,\r\n    modalStateHandler,\r\n    modalState2,\r\n    modalStateHandler2,\r\n    buttonLoadingHandler,\r\n    buttonLoading,\r\n    alertState,\r\n}) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <DeleteButton onClick={() => modalStateHandler(true)} />\r\n                <EditButton onClick={() => modalStateHandler2(true)} />\r\n            </Container>\r\n            <Alert\r\n                visible={modalState}\r\n                setModal={() => modalStateHandler(false)}\r\n                actionDescription={`Are you sure you want to delete promo code (${data.promoCode})?`}\r\n                // onActionButtonClick={() => onActionButtonClick()}\r\n                buttonLoading={buttonLoading}\r\n                actionButtonText=\"Okay, Delete\"\r\n            />\r\n            <Modal visible={modalState2} onRequestClose={() => modalStateHandler2(false)}>\r\n                \r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\nexport default actionButton;\r\n","import RowCell from '@modules/DataTable/RowCell'\r\nimport ActionButton from './ActionButton'\r\n\r\nconst getColumns = ({ setRowsData }) => {\r\n    return [\r\n        {\r\n            id: \"1\",\r\n            field: \"serialNumber\",\r\n            label: \"S/N\",\r\n            visible: true,\r\n            searchable: true,\r\n            editable: false,\r\n            sortable: true,\r\n            resizable: true,\r\n            cellRenderer: RowCell,\r\n            width: \"70px\",\r\n        },\r\n        {\r\n            id: \"2\",\r\n            field: \"document\",\r\n            label: \"Document Title\",\r\n            visible: true,\r\n            searchable: true,\r\n            editable: false,\r\n            sortable: true,\r\n            resizable: true,\r\n            cellRenderer: RowCell,\r\n        },\r\n        {\r\n            id: \"3\",\r\n            field: \"createdAt\",\r\n            label: \"Create At\",\r\n            visible: true,\r\n            searchable: true,\r\n            editable: false,\r\n            sortable: true,\r\n            resizable: true,\r\n            cellRenderer: RowCell,\r\n        },\r\n        {\r\n            id: \"4\",\r\n            field: \"investigationStatus\",\r\n            label: \"Investigation Status\",\r\n            visible: true,\r\n            searchable: true,\r\n            editable: false,\r\n            sortable: true,\r\n            resizable: true,\r\n            cellRenderer: RowCell,\r\n        },\r\n       {\r\n            id: \"buttons\",\r\n            width: \"max-content\",\r\n            visible: true,\r\n            pinned: true,\r\n            sortable: false,\r\n            resizable: false,\r\n            cellRenderer: ActionButton\r\n        }\r\n    ];\r\n};\r\n\r\nexport default getColumns;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SojiBaseInit from '@modules/SojiBase';\r\nimport PagePreloader from '@components/preloader/PagePreloader';\r\nimport DataTable from '@modules/DataTable';\r\nimport getColumns from './Table/Column';\r\n\r\n\r\nexport default function RecentDocument() {\r\n    const [state, setState] = useState({\r\n        fetchedData: false,\r\n    });\r\n\r\n    const stateHandler = (key, value) => {\r\n        state[key] = value;\r\n        setState({ ...state });\r\n    };\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const SojiBase = await SojiBaseInit;\r\n            const getter = await SojiBase.get('v1/suspected_users/get-all_recent_documents');\r\n            getter.on('static', async (response) => {\r\n                const data = response.response.data;\r\n                stateHandler('fetchedData', data);\r\n            });\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container content_Container\">\r\n            {state.fetchedData ? (\r\n                <DataTable getColumns={getColumns} MOCK_DATA={[]} texts=\"No Results fo\"/>\r\n            ) : (\r\n                <PagePreloader />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}